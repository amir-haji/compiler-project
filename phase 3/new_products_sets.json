{"1": ["Program", ["DeclarationList"], ["int", "void"]], "2": ["DeclarationList", ["Declaration", "DeclarationList"], ["int", "void"]], "3": ["DeclarationList", ["\u03b5"], ["break", ";", "ID", "+", "-", "(", "NUM", "if", "return", "{", "while", "$"]], "4": ["Declaration", ["DeclarationInitial", "DeclarationPrime"], ["int", "void"]], "5": ["DeclarationInitial", ["TypeSpecifier", "#saveType", "#setForceDeclarationFlag", "ID", "#setPushFlag", "#pid", "#resetPushFlag", "#resetForceDeclarationFlag"], ["int", "void"]], "6": ["DeclarationPrime", ["FunDeclarationPrime"], ["("]], "7": ["DeclarationPrime", ["VarDeclarationPrime", "#initializeValue", "#voidCheck"], [";,"]], "8": ["VarDeclarationPrime", [";"], [";"]], "9": ["VarDeclarationPrime", ["[", "NUM", "#pnum", "]", "#declareArray", ";"], []], "10": ["FunDeclarationPrime", ["(", "#declareFunction", "#newScope", "#setFunctionScopeFlag", "Params", ")", "CompoundStmt", "#jpBack"], ["("]], "11": ["TypeSpecifier", ["int"], ["int"]], "12": ["TypeSpecifier", ["void", "#setVoidCheckFlag"], ["void"]], "13": ["Params", ["int", "#saveType", "#setForceDeclarationFlag", "ID", "#pid", "#resetForceDeclarationFlag", "ParamPrime", "#popParam", "ParamList"], ["int"]], "14": ["Params", ["void"], ["void"]], "15": ["ParamList", [",", "Param", "ParamList"], [","]], "16": ["ParamList", ["\u03b5"], [")"]], "17": ["Param", ["DeclarationInitial", "ParamPrime", "#popParam"], ["int", "void"]], "18": ["ParamPrime", ["[", "]", "#setArrayType"], []], "19": ["ParamPrime", ["\u03b5"], [",", ")"]], "20": ["CompoundStmt", ["{", "#newScope", "DeclarationList", "StatementList", "#closeScope", "}"], ["{"]], "21": ["StatementList", ["Statement", "StatementList"], ["break", ";", "ID", "+", "-", "(", "NUM", "if", "return", "{", "while"]], "22": ["StatementList", ["\u03b5"], ["}"]], "23": ["Statement", ["ExpressionStmt"], ["break", ";", "ID", "+", "-", "(", "NUM"]], "24": ["Statement", ["CompoundStmt"], ["{"]], "25": ["Statement", ["SelectionStmt"], ["if"]], "26": ["Statement", ["IterationStmt"], ["while"]], "27": ["Statement", ["ReturnStmt"], ["return"]], "28": ["ExpressionStmt", ["Expression", "#pop", ";"], ["ID", "+", "-", "(", "NUM"]], "29": ["ExpressionStmt", ["break", "#break", ";"], ["break"]], "30": ["ExpressionStmt", [";"], [";"]], "31": ["SelectionStmt", ["if", "(", "#startRHS", "Expression", "#endRHS", ")", "#save", "Statement", "else", "#jpfSave", "Statement", "#jp"], ["if"]], "32": ["IterationStmt", ["while", "#label", "(", "#startRHS", "Expression", "#endRHS", ")", "#save", "#startBreakScope", "Statement", "#while", "#jpBreak"], ["while"]], "33": ["ReturnStmt", ["return", "#startRHS", "ReturnStmtPrime", "#endRHS", "#jpBack"], ["return"]], "34": ["ReturnStmtPrime", [";"], [";"]], "35": ["ReturnStmtPrime", ["Expression", "#setReturnValue", ";"], ["ID", "+", "-", "(", "NUM"]], "36": ["Expression", ["SimpleExpressionZegond"], ["+", "-", "(", "NUM"]], "37": ["Expression", ["ID", "#setCheckDeclarationFlag", "#pid", "#resetCheckDeclarationFlag", "#checkType", "B"], ["ID"]], "38": ["B", ["=", "#startRHS", "Expression", "#assign", "#endRHS"], ["="]], "39": ["B", ["[", "#startRHS", "Expression", "#endRHS", "]", "#addressArray", "H"], []], "40": ["B", ["SimpleExpressionPrime"], ["(", "*", "+", "-", "<", "=="]], "41": ["H", ["=", "#startRHS", "Expression", "#assign", "#endRHS"], ["="]], "42": ["H", ["G", "D", "C"], ["*", "+", "-", "<", "=="]], "43": ["SimpleExpressionZegond", ["AdditiveExpressionZegond", "C"], ["+", "-", "(", "NUM"]], "44": ["SimpleExpressionPrime", ["AdditiveExpressionPrime", "C"], ["(", "*", "+", "-", "<", "=="]], "45": ["C", ["Relop", "AdditiveExpression", "#operationExecute"], ["<", "=="]], "46": ["C", ["\u03b5"], [",", ")", "", ";"]], "47": ["Relop", ["<", "#pushRelopOper"], ["<"]], "48": ["Relop", ["==", "#pushRelopOper"], ["=="]], "49": ["AdditiveExpression", ["Term", "D"], ["+", "-", "(", "ID", "NUM"]], "50": ["AdditiveExpressionPrime", ["TermPrime", "D"], ["(", "*", "+", "-"]], "51": ["AdditiveExpressionZegond", ["TermZegond", "D"], ["+", "-", "(", "NUM"]], "52": ["D", ["Addop", "Term", "#operationExecute", "D"], ["+", "-"]], "53": ["D", ["\u03b5"], ["<", "==", ",", ")", "", ";"]], "54": ["Addop", ["+", "#pushRelopOper"], ["+"]], "55": ["Addop", ["-", "#pushRelopOper"], ["-"]], "56": ["Term", ["SignedFactor", "G"], ["+", "-", "(", "ID", "NUM"]], "57": ["TermPrime", ["SignedFactorPrime", "G"], ["(", "*"]], "58": ["TermZegond", ["SignedFactorZegond", "G"], ["+", "-", "(", "NUM"]], "59": ["G", ["*", "#pushRelopOper", "SignedFactor", "#operationExecute", "G"], ["*"]], "60": ["G", ["\u03b5"], ["<", "==", "+", "-", ",", ")", "", ";"]], "61": ["SignedFactor", ["+", "Factor"], ["+"]], "62": ["SignedFactor", ["-", "Factor"], ["-"]], "63": ["SignedFactor", ["Factor"], ["(", "ID", "NUM"]], "64": ["SignedFactorPrime", ["FactorPrime"], ["("]], "65": ["SignedFactorZegond", ["+", "Factor"], ["+"]], "66": ["SignedFactorZegond", ["-", "Factor"], ["-"]], "67": ["SignedFactorZegond", ["FactorZegond"], ["(", "NUM"]], "68": ["Factor", ["(", "#startRHS", "Expression", "#endRHS" ,")"], ["("]], "69": ["Factor", ["ID", "#setCheckDeclarationFlag", "#pid", "#resetCheckDeclarationFlag", "VarCallPrime"], ["ID"]], "70": ["Factor", ["NUM", "#pnum"], ["NUM"]], "71": ["VarCallPrime", ["(", "#argumentListHead", "Args", "#argumentListTail", ")", "#functionCall"], ["("]], "72": ["VarCallPrime", ["VarPrime"], []], "73": ["VarPrime", ["[", "#startRHS", "Expression", "#endRHS", "]", "#addressArray"], []], "74": ["VarPrime", ["\u03b5"], ["*", "+", "-", "<", "==", ",", ")", "", ";"]], "75": ["FactorPrime", ["(", "#argumentListHead", "Args", "#argumentListTail", ")", "#functionCall"], ["("]], "76": ["FactorPrime", ["\u03b5"], ["*", "+", "-", "<", "==", ",", ")", "", ";"]], "77": ["FactorZegond", ["(", "#startRHS", "Expression", "#endRHS", ")"], ["("]], "78": ["FactorZegond", ["NUM", "#pnum"], ["NUM"]], "79": ["Args", ["ArgList"], ["ID", "+", "-", "(", "NUM"]], "80": ["Args", ["\u03b5"], [")"]], "81": ["ArgList", ["Expression", "#incrementArgumentCount", "ArgListPrime"], ["ID", "+", "-", "(", "NUM"]], "82": ["ArgListPrime", [",", "Expression", "#incrementArgumentCount", "ArgListPrime"], [","]], "83": ["ArgListPrime", ["\u03b5"], [")"]]}